# adapted GA workflow from https://github.com/stackhpc/reductionist-rs
---
name: S3/Minio Test with NetCDF4

on:
  push:
    branches:
      - try_netcdf4
  schedule:
    - cron: '0 0 * * *'  # nightly

# Required shell entrypoint to have properly configured bash shell
defaults:
  run:
    shell: bash -l {0}

jobs:
  linux-test:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version: ["3.11"]
      fail-fast: false
    name: Linux Python ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: ${{ matrix.python-version }}
          miniforge-version: "latest"
          miniforge-variant: Mambaforge
          use-mamba: true
      - name: Get conda and Python versions
        run: |
          conda --version
          python -V
      - name: Export proxy
        run: |
          echo 'USE_S3 = True' >> activestorage/config.py
      - name: Start minio object storage
        run: tests/s3_exploratory/minio_scripts/minio-start
      - name: Wait for minio object storage to start
        run: |
          until curl -if http://localhost:9001; do
            sleep 1;
          done
      - name: Run Reductionist container
        run: docker run -it --detach --rm --net=host --name reductionist ghcr.io/stackhpc/reductionist-rs:latest
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: activestorage-minio
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}
          miniforge-version: "latest"
          miniforge-variant: Mambaforge
          use-mamba: true
      - name: Install PyActiveStorage
        run: |
          conda --version
          python -V
          which python
          pip install -e .
      - name: Run tests
        run: |
          pytest
      - name: Run S3-NetCDF4 with "#mode-bytes"
        run: |
          # this only uploads test file to Minio
          pytest tests/s3_exploratory/test_netcdf4s3.py
          # try ncdumping for now
          which ncdump
          # configure aws cli
          aws configure set default.s3.access_key_id minioadmin
          aws configure set default.s3.secret_access_key minioadmin
          aws configure set default.s3.region_name us-east-1
          aws configure set default.s3.signature_version s3v4
          # list current minio contents
          aws --endpoint-url http://localhost:8080 s3 ls
          aws --endpoint-url http://localhost:8080 s3 ls pyactivestorage
          # ncdump it
          ncdump -h s3://pyactivestorage/s3_test_bizarre.nc#mode=bytes
      - name: Run S3-NetCDF4 without "#mode-bytes"
        run: |
          # this only uploads test file to Minio
          pytest tests/s3_exploratory/test_netcdf4s3.py
          # try ncdumping for now
          which ncdump
          # configure aws cli
          aws configure set default.s3.access_key_id minioadmin
          aws configure set default.s3.secret_access_key minioadmin
          aws configure set default.s3.region_name us-east-1
          aws configure set default.s3.signature_version s3v4
          # list current minio contents
          aws --endpoint-url http://localhost:8080 s3 ls
          aws --endpoint-url http://localhost:8080 s3 ls pyactivestorage
          # ncdump it
          ncdump -h s3://pyactivestorage/s3_test_bizarre.nc
        if: always()
      - name: Stop minio object storage
        run: tests/s3_exploratory/minio_scripts/minio-stop
        if: always()
      - name: Upload HTML report artifact
        uses: actions/upload-artifact@v3
        with:
          name: html-report
          path: test-reports/
        if: always()
